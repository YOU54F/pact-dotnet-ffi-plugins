name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  alpine:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [
          dotnet
        ]
        arch: [arm64, amd64]
        exclude:
          - language: dotnet
            arch: arm64
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: matrix.arch != 'amd64'
      - run: docker run --platform=linux/${{ matrix.arch }} --rm -v $PWD:/home alpine sh -c 'apk add --no-cache make bash curl && cd /home && make get_pact_ffi'
      - run: make alpine_${{ matrix.language }}
        env:
          DOCKER_DEFAULT_PLATFORM: linux/${{ matrix.arch }}
  


  dotnet:
    timeout-minutes: 10
    # runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-12, macos-14]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      LD_LIBRARY_PATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v3
      - if: runner.os == 'Windows'
        run: rm 'C:\Windows\System32\bash.exe'
        name: 'remove wsl bash'
      - uses: actions/setup-java@v4 # Needed for the Avro example
        with:
          distribution: 'zulu'
          java-version: '17'
      - run: make get_pact_ffi
      - run: make get_pact_plugins
      - if: matrix.os == 'windows-latest'
        name: add ffi to path
        shell: pwsh
        run: |
          pwd >> $env:GITHUB_PATH
      - run: make dotnet
  